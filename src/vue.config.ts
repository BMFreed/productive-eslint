import type { TypedFlatConfigItem } from '@antfu/eslint-config'

/**
 * Configuration for eslint-plugin-vue. Intended to completely override antfu's
 * rules
 */
export const vueConfig: TypedFlatConfigItem = {
  rules: {
    'antfu/no-top-level-await': 'off',
    'no-restricted-syntax': [
      'error',
      {
        message: `Emits aren't guaranteed to have listeners attached to them. 
        Better pass event handlers as props with the "on" prefix instead`,
        selector: "CallExpression[callee.name='defineEmits']",
      },
      {
        message: 'Use ref instead of reactive for code consistency',
        selector: 'CallExpression[callee.name="reactive"]',
      },
      {
        message:
          'Use the @ (v-on) directive instead and pass the event handler without the "on" prefix',
        selector: 'VDirectiveKey[argument.rawName=/^on.*/]',
      },
    ],
    'vue/attribute-hyphenation': ['error', 'never'],
    'vue/attributes-order': [
      'error',
      {
        alphabetical: true,
      },
    ],
    'vue/block-lang': [
      'error',
      {
        script: {
          lang: 'ts',
        },
      },
    ],
    'vue/block-order': [
      'error',
      {
        order: ['script', 'template', 'style'],
      },
    ],
    'vue/comment-directive': [
      'error',
      {
        reportUnusedDisableDirectives: true,
      },
    ],
    'vue/component-api-style': ['error', ['script-setup']],
    'vue/component-name-in-template-casing': ['error', 'PascalCase'],
    'vue/component-options-name-casing': ['error', 'PascalCase'],
    'vue/custom-event-name-casing': ['error', 'camelCase'],
    'vue/define-macros-order': [
      'error',
      {
        defineExposeLast: true,
        order: [
          'defineOptions',
          'defineModel',
          'defineProps',
          'defineEmits',
          'defineSlots',
        ],
      },
    ],
    'vue/define-props-declaration': 'error',
    'vue/define-props-destructuring': 'error',
    'vue/enforce-style-attribute': [
      'error',
      {
        allow: ['module'],
      },
    ],
    'vue/eqeqeq': ['error', 'smart'],
    'vue/html-button-has-type': 'error',
    'vue/html-comment-content-spacing': [
      'error',
      'always',
      {
        exceptions: ['-'],
      },
    ],
    'vue/html-self-closing': [
      'error',
      {
        html: {
          void: 'always',
        },
      },
    ],
    'vue/jsx-uses-vars': 'error',
    'vue/no-arrow-functions-in-watch': 'error',
    'vue/no-async-in-computed-properties': 'error',
    'vue/no-child-content': 'error',
    'vue/no-console': 'error',
    'vue/no-constant-condition': 'error',
    'vue/no-deprecated-delete-set': 'error',
    'vue/no-deprecated-destroyed-lifecycle': 'error',
    'vue/no-deprecated-dollar-listeners-api': 'error',
    'vue/no-deprecated-dollar-scopedslots-api': 'error',
    'vue/no-deprecated-events-api': 'error',
    'vue/no-deprecated-filter': 'error',
    'vue/no-deprecated-functional-template': 'error',
    'vue/no-deprecated-html-element-is': 'error',
    'vue/no-deprecated-inline-template': 'error',
    'vue/no-deprecated-model-definition': 'error',
    'vue/no-deprecated-props-default-this': 'error',
    'vue/no-deprecated-router-link-tag-prop': 'error',
    'vue/no-deprecated-scope-attribute': 'error',
    'vue/no-deprecated-slot-attribute': 'error',
    'vue/no-deprecated-slot-scope-attribute': 'error',
    'vue/no-deprecated-v-bind-sync': 'error',
    'vue/no-deprecated-v-is': 'error',
    'vue/no-deprecated-v-on-native-modifier': 'error',
    'vue/no-deprecated-v-on-number-modifiers': 'error',
    'vue/no-deprecated-vue-config-keycodes': 'error',
    'vue/no-dupe-v-else-if': 'error',
    'vue/no-duplicate-attr-inheritance': 'error',
    'vue/no-duplicate-attributes': 'error',
    'vue/no-empty-component-block': 'error',
    'vue/no-empty-pattern': 'error',
    'vue/no-export-in-script-setup': 'error',
    'vue/no-expose-after-await': 'error',
    'vue/no-implicit-coercion': 'error',
    'vue/no-import-compiler-macros': 'error',
    'vue/no-irregular-whitespace': 'error',
    'vue/no-lifecycle-after-await': 'error',
    'vue/no-lone-template': 'error',
    'vue/no-loss-of-precision': 'error',
    'vue/no-multiple-objects-in-class': 'error',
    'vue/no-multiple-slot-args': 'error',
    'vue/no-mutating-props': 'error',
    'vue/no-parsing-error': 'error',
    'vue/no-ref-as-operand': 'error',
    'vue/no-ref-object-reactivity-loss': 'error',
    'vue/no-required-prop-with-default': 'error',
    'vue/no-reserved-component-names': 'error',
    'vue/no-reserved-keys': 'error',
    'vue/no-reserved-props': 'error',
    'vue/no-restricted-block': 'error',
    'vue/no-restricted-syntax': [
      'error',
      'DebuggerStatement',
      'LabeledStatement',
      'WithStatement',
    ],
    'vue/no-restricted-v-bind': ['error', '/^v-/'],
    'vue/no-root-v-if': 'error',
    'vue/no-side-effects-in-computed-properties': 'error',
    'vue/no-sparse-arrays': 'error',
    'vue/no-static-inline-styles': 'error',
    'vue/no-template-key': 'error',
    'vue/no-template-shadow': 'error',
    'vue/no-template-target-blank': 'error',
    'vue/no-textarea-mustache': 'error',
    'vue/no-unused-components': 'error',
    'vue/no-unused-refs': 'error',
    'vue/no-unused-vars': 'error',
    'vue/no-use-v-else-with-v-for': 'error',
    'vue/no-use-v-if-with-v-for': 'error',
    'vue/no-useless-mustaches': 'error',
    'vue/no-useless-template-attributes': 'error',
    'vue/no-useless-v-bind': 'error',
    'vue/no-v-for-template-key-on-child': 'error',
    'vue/no-v-html': 'error',
    'vue/no-v-text': 'error',
    'vue/no-v-text-v-html-on-component': 'error',
    'vue/no-watch-after-await': 'error',
    'vue/object-shorthand': [
      'error',
      'always',
      {
        avoidQuotes: true,
        ignoreConstructors: false,
      },
    ],
    'vue/order-in-components': 'error',
    'vue/padding-line-between-blocks': ['error', 'always'],
    'vue/prefer-import-from-vue': 'error',
    'vue/prefer-separate-static-class': 'error',
    'vue/prefer-template': 'error',
    'vue/prefer-true-attribute-shorthand': 'error',
    'vue/prefer-use-template-ref': 'error',
    'vue/prop-name-casing': ['error', 'camelCase'],
    'vue/require-component-is': 'error',
    'vue/require-explicit-emits': 'error',
    'vue/require-macro-variable-name': 'error',
    'vue/require-render-return': 'error',
    'vue/require-toggle-inside-transition': 'error',
    'vue/require-typed-ref': 'error',
    'vue/require-v-for-key': 'error',
    'vue/slot-name-casing': 'error',
    'vue/this-in-template': 'error',
    'vue/use-v-on-exact': 'error',
    'vue/v-bind-style': [
      'error',
      'shorthand',
      {
        sameNameShorthand: 'always',
      },
    ],
    'vue/v-for-delimiter-style': ['error', 'of'],
    'vue/v-if-else-key': 'error',
    'vue/v-on-event-hyphenation': [
      'error',
      'never',
      {
        autofix: true,
      },
    ],
    'vue/v-on-handler-style': ['error', 'inline'],
    'vue/v-on-style': 'error',
    'vue/v-slot-style': [
      'error',
      {
        atComponent: 'v-slot',
        default: 'v-slot',
        named: 'longform',
      },
    ],
    'vue/valid-attribute-name': 'error',
    'vue/valid-define-emits': 'error',
    'vue/valid-define-options': 'error',
    'vue/valid-define-props': 'error',
    'vue/valid-next-tick': 'error',
    'vue/valid-template-root': 'error',
    'vue/valid-v-bind': 'error',
    'vue/valid-v-cloak': 'error',
    'vue/valid-v-else': 'error',
    'vue/valid-v-else-if': 'error',
    'vue/valid-v-for': 'error',
    'vue/valid-v-html': 'error',
    'vue/valid-v-if': 'error',
    'vue/valid-v-is': 'error',
    'vue/valid-v-memo': 'error',
    'vue/valid-v-model': 'error',
    'vue/valid-v-on': 'error',
    'vue/valid-v-once': 'error',
    'vue/valid-v-pre': 'error',
    'vue/valid-v-show': 'error',
    'vue/valid-v-slot': 'error',
    'vue/valid-v-text': 'error',
  },
}
